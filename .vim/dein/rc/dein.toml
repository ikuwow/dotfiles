[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
    let g:fern#default_hidden = 1
    command! Nt Fern . -toggle -drawer
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
depends = ['fern.vim']

[[plugins]]
repo = 'kassio/neoterm'
if = 'has("nvim")'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_linters = {
    \    'html': ['htmlhint'],
    \    'php': ['php', 'phpcs'],
    \    'javascript': ['eslint'],
    \    'markdown': ['textlint']
    \}
    let g:ale_lint_on_text_changed = 'never'
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'thinca/vim-zenspace'
hook_add = '''
    let g:zenspace#default_mode = 'on'
    augroup vimrc-highlight
        autocmd!
        autocmd ColorScheme * highlight ZenSpace ctermbg=Red guibg=Red
    augroup END
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['vim-fugitive']
hook_add = '''
    let g:lightline = {
        \ 'colorscheme': 'jellybeans',
        \ 'active': {
        \     'left': [
        \         ['mode', 'current_branch', 'paste'],
        \         [ 'modified', 'filename', 'readonly']
        \     ]
        \ },
        \ 'component': {
        \     'readonly': '%{&readonly?"[RO]":""}'
        \ },
        \ 'component_function': {
        \     'current_branch': 'CurrentBranch',
        \     'filename': 'FileName',
        \     'mode': 'MultiMode',
        \     'fileformat': 'FileFormat',
        \     'filetype': 'FileType',
        \     'fileencoding': 'FileEncoding'
        \ }
    \ }

    "-- lightline functions --"
    function! CurrentBranch()
        try
            if exists('*fugitive#head') && strlen(fugitive#head())
                return "ãƒˆ " . fugitive#head()
            endif
        catch
        endtry
        return ''
    endfunction

    function! FileName()
        return expand('%:t')
    endfunction

    function! MultiMode()
        let fname = expand('%:t')
        return lightline#mode()
    endfunction

    function! FileFormat()
        return winwidth(0) > 70 ? &fileformat : ''
    endfunction

    function! FileType()
        return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
    endfunction

    function! FileEncoding()
        return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
    endfunction
'''

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup=1
    let g:indent_guides_start_level=2
    let g:indent_guides_color_change_percent = 2
    let g:indent_guides_guide_size = 1
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
    let g:EditorConfig_core_mode = 'python_external'
    let g:EditorConfig_max_line_indicator = "exceeding"
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'vim-scripts/taglist.vim'
hook_add = '''
    let g:Tlist_Use_Right_Window = 1
    let g:Tlist_WinWidth = 40
'''

[[plugins]]
repo = 'chr4/nginx.vim'

[[plugins]]
repo = 'glench/vim-jinja2-syntax'

[[plugins]]
repo = 'pearofducks/ansible-vim'

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'bfontaine/Brewfile.vim'

[[plugins]]
repo = 'okkiroxx/rtx.vim'
