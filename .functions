# vim: filetype=sh :

prompts() {
  if [ -z "$SSH_CLIENT" ]; then
    PS1='localhost: \W\$ '
  fi

  PS1="$(echo "${PS1}" | sed 's/\\\$ /\\e\[33m\\\]\\\$\\\[\\e\[0m\\\] /')"

  if [ -n "$SSH_CLIENT" ]; then
    if [ "$PS1" = "${PS1/ssh/}" ]; then
      PS1='\[\e[33m\][ssh]\[\e[0m\]'"${PS1}"
    fi
  fi
}

if [ "$(command -v networksetup)" ]; then
  wifireset() {
    interface='en0'
    networksetup -setairportpower "$interface" off
    echo 'Re-enabling Wi-Fi...'
    networksetup -setairportpower "$interface" on
    echo 'Done.'
  }
fi

if [ "$(command -v github-nippou)" ]; then
  shuho() {
    since=$(date "+%Y%m%d" --date '7 day ago')
    until=$(date "+%Y%m%d" --date '1 day ago')

    echo "Fetching contributions during $since ~ $until..."

    github-nippou -u "$until" -s "$since"
  }
fi

if [ "$(command -v terminal-notifier)" ]; then
  tn() {
    local message="$1"
    terminal-notifier -sound default -message "$message"
  }
fi

if [ ! "$(command -v trash)" ]; then
  trash () {
    # shellcheck disable=2016
    echo 'Warning: `trash` is redirected to `rm`.'
    rm "$@"
  }
fi

if [ "$(command -v ghq)" ] && [ "$(command -v fzf)" ]; then
  ghqp() {
    query="$1"
    if [ -n "$query" ]; then
      repo=$(ghq list | fzf --filter "$query" | head -n 1)
    else
      repo=$(ghq list | fzf)
    fi

    if [ -z "$repo" ]; then
      echo "No repos are selected."
      return
    fi
    echo "Changing directory to $(ghq root)/$repo"
    cd "$(ghq root)/$repo" || return 1
  }
fi
