[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let NERDTreeShowHidden = 1
    command! Nt NERDTree
'''

[[plugins]]
repo = 'scrooloose/syntastic.git'
hook_add = '''
    let g:syntastic_php_checkers = ['php'] " do not use phpmd and phpcs
    let g:syntastic_javascript_checkers = ['jshint']
    let g:syntastic_html_tidy_exec = 'tidy5'
    let g:syntastic_eruby_ruby_quiet_messages =
        \ {'regex': 'possibly useless use of a variable in void context'}
    let g:syntastic_html_tidy_ignore_errors=[
        \'proprietary attribute "ng-'
    \]
'''

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'hashivim/vim-terraform'

[[plugins]]
repo = 'vim-scripts/taglist.vim'

[[plugins]]
repo = 'thinca/vim-zenspace')
hook_add = '''
    let g:zenspace#default_mode = 'on'
    augroup vimrc-highlight
        autocmd!
        autocmd ColorScheme * highlight ZenSpace ctermbg=Red guibg=Red
    augroup END
'''


[[plugins]]
repo = 'glidenote/memolist.vim'
hook_add = '''
    let g:memolist_path = expand("~/Documents/Memos")
    let g:memolist_memo_suffix = "md"
    let g:memolist_ex_cmd = 'NERDTree'
'''

[[plugins]]
repo = 'Shougo/neocomplete'
hook_add = '''
    let g:neocomplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
        \ 'colorscheme': 'jellybeans',
        \ 'active': {
        \     'left': [
        \         ['mode', 'current_branch', 'paste'],
        \         [ 'modified', 'filename', 'readonly']
        \     ]
        \ },
        \ 'component': {
        \     'readonly': '%{&readonly?"[RO]":""}'
        \ },
        \ 'component_function': {
        \     'current_branch': 'CurrentBranch',
        \     'filename': 'FileName',
        \     'mode': 'MultiMode',
        \     'fileformat': 'FileFormat',
        \     'filetype': 'FileType',
        \     'fileencoding': 'FileEncoding'
        \ }
    \ }

    "-- lightline functions --"
    function! CurrentBranch()
        try
            if &ft !~? 'nerdtree' && exists('*fugitive#head') && strlen(fugitive#head())
                return "ãƒˆ " . fugitive#head()
            endif
        catch
        endtry
        return ''
    endfunction

    function! FileName()
        if &ft !~? 'nerdtree'
            return expand('%:t')
        endif
        return ''
    endfunction

    function! MultiMode()
        let fname = expand('%:t')
        return fname =~ 'NERD_tree' ? 'NERDTree' : lightline#mode()
    endfunction

    function! FileFormat()
        return winwidth(0) > 70 ? &fileformat : ''
    endfunction

    function! FileType()
        return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
    endfunction

    function! FileEncoding()
        return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
    endfunction
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup=1
    let g:indent_guides_start_level=2
    let g:indent_guides_color_change_percent =5
    let g:indent_guides_guide_size = 1
'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'
hook_add = '''
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
'''

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
'''

[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
    let g:previm_open_cmd="open -a Safari"
    augroup PrevimSettings
        autocmd!
        autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
    augroup END
'''
